
memc=/home/shgli/src/MemCachedClient CD=build filter="*.h *.hpp *.cpp" {
 build=build {
  CMakeFiles=CMakeFiles {
   2.8.11.2=2.8.11.2 {
    CompilerIdC=CompilerIdC {
    }
    CompilerIdCXX=CompilerIdCXX {
     CMakeCXXCompilerId.cpp
    }
   }
   CMakeTmp=CMakeTmp {
   }
  }
  common=common {
   CMakeFiles=CMakeFiles {
    common.dir=common.dir {
    }
   }
  }
  example=example {
   CMakeFiles=CMakeFiles {
    AsyncGet.dir=AsyncGet.dir {
    }
    SyncGet.dir=SyncGet.dir {
    }
   }
  }
  log=log {
   CMakeFiles=CMakeFiles {
    Log.dir=Log.dir {
    }
   }
  }
  memcachedClient=memcachedClient {
   CMakeFiles=CMakeFiles {
    memclient.dir=memclient.dir {
    }
   }
  }
  network=network {
   CMakeFiles=CMakeFiles {
    network.dir=network.dir {
    }
   }
  }
  serverManager=serverManager {
   CMakeFiles=CMakeFiles {
    serverManager.dir=serverManager.dir {
    }
   }
  }
  test=test {
   CMakeFiles=CMakeFiles {
    logTest.dir=logTest.dir {
    }
    memtest.dir=memtest.dir {
    }
   }
  }
  utils=utils {
   CMakeFiles=CMakeFiles {
    utils.dir=utils.dir {
    }
   }
  }
 }
 cmake=cmake {
 }
 common=common {
  FileHandler.h
  InternalMacros.h
  Singleton.h
  FileHandler.hpp
  FileHandler.cpp
 }
 example=example {
  AsyncGet.cpp
  SyncGet.cpp
 }
 install=install {
  bin=bin {
   conf=conf {
   }
  }
  include=include {
   Log=Log {
   }
   common=common {
    FileHandler.h
    InternalMacros.h
    Singleton.h
   }
   memclient=memclient {
   }
   network=network {
    HostNetConversion.h
    InternalMacros.h
    SharedBuffer.h
    TcpClient.h
   }
   serverManager=serverManager {
    ConsistentHashDistri.h
    DistributeAlgorithm.h
    InternalMacros.h
    MemoDistri.h
    ModuloDistri.h
    ServerItem.h
    ServerList.h
   }
   utils=utils {
    InternalMacros.h
    md5.h
   }
  }
  lib=lib {
  }
 }
 log=log {
  InternalMacros.h
  LogCommon.h
  LogManager.h
  LoggerInfo.h
  SinkInfo.h
  LogCommon.cpp
  LogManager.cpp
 }
 memcachedClient=memcachedClient {
  InternalMacros.h
  MemAppend.h
  MemLog.h
  MemResult.h
  MemcachedClient.h
  MemcachedCommon.h
  RequestItem.h
  MemAppend.cpp
  MemDelete.cpp
  MemFlush.cpp
  MemGet.cpp
  MemResult.cpp
  MemSelfOp.cpp
  MemStat.cpp
  MemStore.cpp
  MemVersion.cpp
  MemcachedClient.cpp
  RequestItem.cpp
 }
 network=network {
  HostNetConversion.h
  InternalMacros.h
  SharedBuffer.h
  TcpClient.h
  HostNetConversion.cpp
  SharedBuffer.cpp
  TcpClient.cpp
 }
 serverManager=serverManager {
  ConsistentHashDistri.h
  DistributeAlgorithm.h
  InternalMacros.h
  MemoDistri.h
  ModuloDistri.h
  ServerItem.h
  ServerList.h
  ConsistentHashDistri.cpp
  MemoDistri.cpp
  ModuloDistri.cpp
  ServerItem.cpp
  ServerList.cpp
 }
 test=test {
  LogTest.cpp
  SharedBufferTest.cpp
  conf=conf {
  }
 }
 utils=utils {
  InternalMacros.h
  md5.h
  md5.cpp
 }
}
